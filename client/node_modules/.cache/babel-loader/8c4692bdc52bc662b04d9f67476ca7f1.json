{"ast":null,"code":"import _classCallCheck from \"/Users/ryanmoore/Desktop/test-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanmoore/Desktop/test-react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanmoore/Desktop/test-react/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanmoore/Desktop/test-react/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanmoore/Desktop/test-react/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryanmoore/Desktop/test-react/client/src/pages/Paths.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem } from \"../components/List\";\n\nvar Paths =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Paths, _Component);\n\n  function Paths() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Paths);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Paths)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      paths: []\n    };\n\n    _this.loadPaths = function () {\n      API.getPaths().then(function (allData) {\n        console.log(allData, \"This is allData in Paths.js\");\n\n        _this.setState({\n          paths: allData.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Paths, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadPaths();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"PATHS IN THE ROOT ROUTE\")), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.state.paths.map(function (path) {\n        return React.createElement(ListItem, {\n          key: path.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/paths/\" + path.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, path.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, path.description), React.createElement(\"img\", {\n          src: path.image,\n          alt: path.name,\n          style: {\n            height: 50\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        })));\n      })));\n    }\n  }]);\n\n  return Paths;\n}(Component);\n\nexport default Paths;","map":{"version":3,"sources":["/Users/ryanmoore/Desktop/test-react/client/src/pages/Paths.js"],"names":["React","Component","Jumbotron","API","Link","List","ListItem","Paths","state","paths","loadPaths","getPaths","then","allData","console","log","setState","data","catch","err","map","path","id","name","description","image","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAQRC,S,GAAY,YAAM;AAChBP,MAAAA,GAAG,CAACQ,QAAJ,GACGC,IADH,CACQ,UAAAC,OAAO,EAAI;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,6BAArB;;AACA,cAAKG,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAEI,OAAO,CAACI;AAAjB,SAAd;AACD,OAJH,EAKGC,KALH,CAKS,UAAAC,GAAG;AAAA,eAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAJ;AAAA,OALZ;AAMD,K;;;;;;;wCAXmB;AAClB,WAAKT,SAAL;AACD;;;6BAWQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADN,EAIQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,KAAX,CAAiBW,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,YAAYD,IAAI,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,IAAI,CAACE,IADV,CADA,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,IAAI,CAACG,WADR,CAJF,EAOE;AAAK,UAAA,GAAG,EAAEH,IAAI,CAACI,KAAf;AAAsB,UAAA,GAAG,EAAEJ,IAAI,CAACE,IAAhC;AAAsC,UAAA,KAAK,EAAE;AAACG,YAAAA,MAAM,EAAE;AAAT,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF,CADwB;AAAA,OAAzB,CADH,CAJR,CADF;AAsBD;;;;EAzCiBzB,S;;AA4CpB,eAAeM,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem } from \"../components/List\";\n\nclass Paths extends Component {\n  state = {\n    paths: [],\n  };\n\n  componentDidMount() {\n    this.loadPaths();\n  }\n\n  loadPaths = () => {\n    API.getPaths()\n      .then(allData => {\n        console.log(allData, \"This is allData in Paths.js\")\n        this.setState({ paths: allData.data})\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n            <Jumbotron>\n              <h1>PATHS IN THE ROOT ROUTE</h1>\n            </Jumbotron>\n              <List>\n                {this.state.paths.map(path => (\n                  <ListItem key={path.id}>\n                    <Link to={\"/paths/\" + path.id}>\n                    <h2>\n                        {path.name}\n                      </h2>\n                      <p>\n                        {path.description}\n                      </p>\n                      <img src={path.image} alt={path.name} style={{height: 50}}></img>\n                    </Link>\n                  </ListItem>\n                ))}\n              </List>\n      </div>\n    );\n  }\n}\n\nexport default Paths;\n"]},"metadata":{},"sourceType":"module"}